var{PI:I,sin:O,cos:J,acos:U,atan2:H,sqrt:E,random:L,abs:F}=Math,$=I*2;class Q{#k=0;#A=new Float64Array([0,0]);#l=new Float64Array(2);#j(l=this.#l[0],j=this.#l[1]){if(l!==this.#A[0]||j!==this.#A[1])this.#k=E(l**2+j**2),this.#A[0]=l,this.#A[1]=j}constructor(l=0,j=0){this.#l[0]=l,this.#l[1]=j,this.#j(l,j)}static add(l,j){return new Q(l.#l[0]+j.#l[0],l.#l[1]+j.#l[1])}static angleBetween(l,j){const k=l.#l[0],A=l.#l[1],B=j.#l[0],C=j.#l[1];return H(k*C-A*B,k*B+A*C)}static distance(l,j){return E((l.#l[0]-j.#l[0])**2+(l.#l[1]-j.#l[1])**2)}static distanceChebyshev(l,j){const k=F(l.#l[0]-j.#l[0]),A=F(l.#l[1]-j.#l[1]);return k>=A?k:A}static distanceManhattan(l,j){return F(l.#l[0]-j.#l[0])+F(l.#l[1]-j.#l[1])}static distanceMinkowski(l,j,k){return(F(l.#l[0]-j.#l[0])**k+F(l.#l[1]-j.#l[1])**k)**(1/k)}static distanceSq(l,j){return(l.#l[0]-j.#l[0])**2+(l.#l[1]-j.#l[1])**2}static dot(l,j){return l.#l[0]*j.#l[0]+l.#l[1]*j.#l[1]}static fromPolarCoords(l,j){return new Q(l*J(j),l*O(j))}static immutable(l=0,j=0){const k=new Float64Array(10);k[0]=l,k[1]=j,k[4]=H(j,l)+(j<0?$:0),k[5]=-H(l,j)+(l>0?$:0);const A=l**2+j**2;k[8]=E(A),k[9]=A;const B=l===Infinity||l===(-Infinity)||j===Infinity||j===(-Infinity),C=isNaN(l)&&isNaN(j),D=l===0&&j===0,G=Object.freeze([...k.slice(0,2)]);return{get angleX(){return k[4]},get angleY(){return k[5]},get isInfinite(){return B},get isNaN(){return C},get isZero(){return D},get magnitude(){return k[8]},get magnitudeSq(){return k[10]},get x(){return k[0]},get xy(){return G},get y(){return k[1]}}}static isInfinite(l){const j=l.#l[0],k=l.#l[1];return j===Infinity||j===(-Infinity)||k===Infinity||k===(-Infinity)}static isNaN(l){return isNaN(l.#l[0])||isNaN(l.#l[1])}static isZero(l){return l.#l[0]===0&&l.#l[1]===0}static lerp(l,j,k){if(k>1)k=1;else if(k<0)k=0;const A=l.#l[0],B=l.#l[1];return new Q(A+(j.#l[0]-A)*k,B+(j.#l[1]-B)*k)}static negate(l){return new Q(-l.#l[0],-l.#l[1])}static normalize(l){const j=l.#k;return new Q(l.#l[0]/j,l.#l[1]/j)}static project(l,j){const k=l.#l[0],A=l.#l[1],B=j.#l[0],C=j.#l[1],D=j.#k,G=l.#k*J(H(k*C-A*B,k*B+A*C));return new Q(B/D*G,C/D*G)}static random(){const l=L()*$;return new Q(J(l),O(l))}static satisfyEquality(l,j){return l.#l[0]===j.#l[0]&&l.#l[1]===j.#l[1]}static satisfyOpposition(l,j){return l.#l[0]===-j.#l[0]&&l.#l[1]===-j.#l[1]}static scale(l,j){return new Q(l.#l[0]*j,l.#l[1]*j)}static subtract(l,j){return new Q(l.#l[0]-j.#l[0],l.#l[1]-j.#l[1])}static zero(){return new Q}get angleX(){return H(this.#l[1],this.#l[0])+(this.#l[1]<0?$:0)}get angleY(){return-H(this.#l[0],this.#l[1])+(this.#l[0]>0?$:0)}get magnitude(){return this.#k}get magnitudeSq(){return this.#k**2}get x(){return this.#l[0]}get xy(){return this.#l.slice()}get y(){return this.#l[1]}set angleX(l){const j=this.#k;this.#l[0]=j*J(l),this.#l[1]=j*O(l),this.#j()}set angleY(l){const j=this.#k;this.#l[0]=j*-O(l),this.#l[1]=j*J(l),this.#j()}set magnitude(l){const j=this.#k;this.#l[0]=this.#l[0]/j*l,this.#l[1]=this.#l[1]/j*l,this.#j()}set x(l){this.#l[0]=l,this.#j()}set xy(l){this.#l[0]=l[0],this.#l[1]=l[1],this.#j()}set y(l){this.#l[1]=l,this.#j()}add(l){return this.#l[0]+=l.#l[0],this.#l[1]+=l.#l[1],this.#j(),this}angleBetween(l){const j=this.#l[0],k=this.#l[1],A=l.#l[0],B=l.#l[1];return H(j*B-k*A,j*A+k*B)}clamp(l,j){const k=this.#k;if(k>j)this.#l[0]=this.#l[0]/k*j,this.#l[1]=this.#l[1]/k*j,this.#j();else if(k<l)this.#l[0]=this.#l[0]/k*l,this.#l[1]=this.#l[1]/k*l,this.#j();return this}clone(){return new Q(this.#l[0],this.#l[1])}copy(l){return this.#l[0]=l.#l[0],this.#l[1]=l.#l[1],this.#j(),this}distance(l){return E((this.#l[0]-l.#l[0])**2+(this.#l[1]-l.#l[1])**2)}distanceSq(l){return(this.#l[0]-l.#l[0])**2+(this.#l[1]-l.#l[1])**2}dot(l){return this.#l[0]*l.#l[0]+this.#l[1]*l.#l[1]}isInfinite(){const l=this.#l[0],j=this.#l[1];return l===Infinity||l===(-Infinity)||j===Infinity||j===(-Infinity)}isNaN(){return isNaN(this.#l[0])||isNaN(this.#l[1])}isZero(){return this.#l[0]===0&&this.#l[1]===0}limitMax(l){const j=this.#k;if(j>l)this.#l[0]=this.#l[0]/j*l,this.#l[1]=this.#l[1]/j*l,this.#j();return this}limitMin(l){const j=this.#k;if(j<l)this.#l[0]=this.#l[0]/j*l,this.#l[1]=this.#l[1]/j*l,this.#j();return this}lookAt(l){const j=this.#k,k=l.#k;return this.#l[0]=l.#l[0]/k*j,this.#l[1]=l.#l[1]/k*j,this.#j(),this}negate(){return this.#l[0]*=-1,this.#l[1]*=-1,this.#j(),this}normalize(){const l=this.#k;return this.#l[0]/=l,this.#l[1]/=l,this.#j(),this}project(l){const j=this.#l[0],k=this.#l[1],A=l.#l[0],B=l.#l[1],C=l.#k,D=this.#k*J(H(j*B-k*A,j*A+k*B));return this.#l[0]=A/C*D,this.#l[1]=B/C*D,this.#j(),this}random(){const l=L()*$,j=this.#k;return this.#l[0]=j*J(l),this.#l[1]=j*O(l),this.#j(),this}rotateZ(l){const j=J(l),k=O(l),A=this.#l[0],B=this.#l[1];return this.#l[0]=A*j-B*k,this.#l[1]=A*k+B*j,this.#j(),this}satisfyEquality(l){return this.#l[0]===l.#l[0]&&this.#l[1]===l.#l[1]}satisfyOpposition(l){return this.#l[0]===-l.#l[0]&&this.#l[1]===-l.#l[1]}scale(l){return this.#l[0]*=l,this.#l[1]*=l,this}subtract(l){return this.#l[0]-=l.#l[0],this.#l[1]-=l.#l[1],this.#j(),this}turnLeft(){const l=this.#l[0];return this.#l[0]=-this.#l[1],this.#l[1]=l,this.#j(),this}turnRight(){const l=this.#l[0];return this.#l[0]=this.#l[1],this.#l[1]=-l,this.#j(),this}zero(){return this.#l[0]=0,this.#l[1]=0,this.#j(),this}*[Symbol.iterator](){yield this.#l[0],yield this.#l[1]}}class K{#k=0;#A=new Float64Array([0,0,0]);#l=new Float64Array(3);#j(l=this.#l[0],j=this.#l[1],k=this.#l[2]){if(l!==this.#A[0]||j!==this.#A[1]||k!==this.#A[2])this.#k=E(l**2+j**2+k**2),this.#A[0]=l,this.#A[1]=j,this.#A[2]=k}constructor(l=0,j=0,k=0){this.#l[0]=l,this.#l[1]=j,this.#l[2]=k,this.#j(l,j,k)}static add(l,j){return new K(l.#l[0]+j.#l[0],l.#l[1]+j.#l[1],l.#l[2]+j.#l[2])}static angleBetween(l,j){return U((l.#l[0]*j.#l[0]+l.#l[1]*j.#l[1]+l.#l[2]*j.#l[2])/(l.#k*j.#k))}static cross(l,j){const k=l.#l[0],A=l.#l[1],B=l.#l[2],C=j.#l[0],D=j.#l[1],G=j.#l[2];return new K(A*G-B*D,B*C-k*G,k*D-A*C)}static distance(l,j){return E((l.#l[0]-j.#l[0])**2+(l.#l[1]-j.#l[1])**2+(l.#l[2]-j.#l[2])**2)}static distanceChebyshev(l,j){const k=F(l.#l[0]-j.#l[0]),A=F(l.#l[1]-j.#l[1]),B=F(l.#l[2]-j.#l[2]);return k>=A&&k>=B?k:A>=B?A:B}static distanceManhattan(l,j){return F(l.#l[0]-j.#l[0])+F(l.#l[1]-j.#l[1])+F(l.#l[2]-j.#l[2])}static distanceMinkowski(l,j,k){return(F(l.#l[0]-j.#l[0])**k+F(l.#l[1]-j.#l[1])**k+F(l.#l[2]-j.#l[2])**k)**(1/k)}static distanceSq(l,j){return(l.#l[0]-j.#l[0])**2+(l.#l[1]-j.#l[1])**2+(l.#l[2]-j.#l[2])**2}static dot(l,j){return l.#l[0]*j.#l[0]+l.#l[1]*j.#l[1]+l.#l[2]*j.#l[2]}static fromCylindricalCoords(l,j,k){return new K(l*J(j),l*O(j),k)}static fromSphericalCoords(l,j,k){return new K(l*O(j)*J(k),l*O(j)*O(k),l*J(j))}static immutable(l=0,j=0,k=0){const A=new Float64Array(10);A[0]=l,A[1]=j,A[2]=k;const B=l**2+j**2;A[4]=H(E(j**2+k**2),l),A[5]=H(E(k**2+l**2),j),A[6]=H(E(B),k);const C=B+k**2;A[8]=E(C),A[9]=C;const D=l===Infinity||l===(-Infinity)||j===Infinity||j===(-Infinity)||k===Infinity||k===(-Infinity),G=isNaN(l)&&isNaN(j)&&isNaN(k),T=l===0&&j===0&&k===0,_=Object.freeze([...A.slice(0,3)]);return{get angleX(){return A[4]},get angleY(){return A[5]},get angleZ(){return A[6]},get b(){return A[2]},get g(){return A[1]},get isInfinite(){return D},get isNaN(){return G},get isZero(){return T},get magnitude(){return A[8]},get magnitudeSq(){return A[10]},get r(){return A[0]},get rgb(){return _},get x(){return A[0]},get xyz(){return _},get y(){return A[1]},get z(){return A[2]}}}static isInfinite(l){const j=l.#l[0],k=l.#l[1],A=l.#l[2];return j===Infinity||j===(-Infinity)||k===Infinity||k===(-Infinity)||A===Infinity||A===(-Infinity)}static isNaN(l){return isNaN(l.#l[0])||isNaN(l.#l[1])||isNaN(l.#l[2])}static isZero(l){return l.#l[0]===0&&l.#l[1]===0&&l.#l[2]===0}static lerp(l,j,k){if(k>1)k=1;else if(k<0)k=0;const A=l.#l[0],B=l.#l[1],C=l.#l[2];return new K(A+(j.#l[0]-A)*k,B+(j.#l[1]-B)*k,C+(j.#l[2]-C)*k)}static negate(l){return new K(-l.#l[0],-l.#l[1],-l.#l[2])}static normalize(l){const j=l.#k;return new K(l.#l[0]/j,l.#l[1]/j,l.#l[2]/j)}static project(l,j){const k=l.#k,A=j.#k,B=j.#l[0],C=j.#l[1],D=j.#l[2],G=k*J(U((l.#l[0]*B+l.#l[1]*C+l.#l[2]*D)/(k*A)));return new K(B/A*G,C/A*G,D/A*G)}static random(){let l,j;do l=L()*2-1,j=L()*2-1;while(l**2+j**2>=1);const k=E(1-l**2-j**2);return new K(2*l*k,2*j*k,1-2*(l**2+j**2))}static satisfyEquality(l,j){return l.#l[0]===j.#l[0]&&l.#l[1]===j.#l[1]&&l.#l[2]===j.#l[2]}static satisfyOpposition(l,j){return l.#l[0]===-j.#l[0]&&l.#l[1]===-j.#l[1]&&l.#l[2]===-j.#l[2]}static scale(l,j){return new K(l.#l[0]*j,l.#l[1]*j,l.#l[2]*j)}static subtract(l,j){return new K(l.#l[0]-j.#l[0],l.#l[1]-j.#l[1],l.#l[2]-j.#l[2])}static zero(){return new K}get angleX(){return H(E(this.#l[1]**2+this.#l[2]**2),this.#l[0])}get angleY(){return H(E(this.#l[2]**2+this.#l[0]**2),this.#l[1])}get angleZ(){return H(E(this.#l[0]**2+this.#l[1]**2),this.#l[2])}get b(){return this.#l[2]}get g(){return this.#l[1]}get magnitude(){return this.#k}get magnitudeSq(){return this.#k**2}get r(){return this.#l[0]}get rgb(){return this.#l.slice()}get x(){return this.#l[0]}get xyz(){return this.#l.slice()}get y(){return this.#l[1]}get z(){return this.#l[2]}set b(l){this.#l[2]=l,this.#j()}set g(l){this.#l[1]=l,this.#j()}set magnitude(l){const j=this.#k;this.#l[0]=this.#l[0]/j*l,this.#l[1]=this.#l[1]/j*l,this.#l[2]=this.#l[2]/j*l,this.#j()}set r(l){this.#l[0]=l,this.#j()}set rgb(l){this.#l[0]=l[0],this.#l[1]=l[1],this.#l[2]=l[2],this.#j()}set x(l){this.#l[0]=l,this.#j()}set xyz(l){this.#l[0]=l[0],this.#l[1]=l[1],this.#l[2]=l[2],this.#j()}set y(l){this.#l[1]=l,this.#j()}set z(l){this.#l[2]=l,this.#j()}add(l){return this.#l[0]+=l.#l[0],this.#l[1]+=l.#l[1],this.#l[2]+=l.#l[2],this.#j(),this}angleBetween(l){return U((this.#l[0]*l.#l[0]+this.#l[1]*l.#l[1]+this.#l[2]*l.#l[2])/(this.#k*l.#k))}clamp(l,j){const k=this.#k;if(k>j)this.#l[0]=this.#l[0]/k*j,this.#l[1]=this.#l[1]/k*j,this.#l[2]=this.#l[2]/k*j,this.#j();else if(k<l)this.#l[0]=this.#l[0]/k*l,this.#l[1]=this.#l[1]/k*l,this.#l[2]=this.#l[2]/k*l,this.#j();return this}clone(){return new K(this.#l[0],this.#l[1],this.#l[2])}copy(l){return this.#l[0]=l.#l[0],this.#l[1]=l.#l[1],this.#l[2]=l.#l[2],this.#j(),this}cross(l){const j=this.#l[0],k=this.#l[1],A=this.#l[2],B=l.#l[0],C=l.#l[1],D=l.#l[2];return this.#l[0]=k*D-A*C,this.#l[1]=A*B-j*D,this.#l[2]=j*C-k*B,this.#j(),this}distance(l){return E((this.#l[0]-l.#l[0])**2+(this.#l[1]-l.#l[1])**2+(this.#l[2]-l.#l[2])**2)}distanceSq(l){return(this.#l[0]-l.#l[0])**2+(this.#l[1]-l.#l[1])**2+(this.#l[2]-l.#l[2])**2}dot(l){return this.#l[0]*l.#l[0]+this.#l[1]*l.#l[1]+this.#l[2]*l.#l[2]}isInfinite(){const l=this.#l[0],j=this.#l[1],k=this.#l[2];return l===Infinity||l===(-Infinity)||j===Infinity||j===(-Infinity)||k===Infinity||k===(-Infinity)}isNaN(){return isNaN(this.#l[0])||isNaN(this.#l[1])||isNaN(this.#l[2])}isZero(){return this.#l[0]===0&&this.#l[1]===0&&this.#l[2]===0}limitMax(l){const j=this.#k;if(j>l)this.#l[0]=this.#l[0]/j*l,this.#l[1]=this.#l[1]/j*l,this.#l[2]=this.#l[2]/j*l,this.#j();return this}limitMin(l){const j=this.#k;if(j<l)this.#l[0]=this.#l[0]/j*l,this.#l[1]=this.#l[1]/j*l,this.#l[2]=this.#l[2]/j*l,this.#j();return this}lookAt(l){const j=this.#k,k=l.#k;return this.#l[0]=l.#l[0]/k*j,this.#l[1]=l.#l[1]/k*j,this.#l[2]=l.#l[2]/k*j,this.#j(),this}negate(){return this.#l[0]*=-1,this.#l[1]*=-1,this.#l[2]*=-1,this.#j(),this}normalize(){const l=this.#k;return this.#l[0]/=l,this.#l[1]/=l,this.#l[2]/=l,this.#j(),this}project(l){const j=this.#k,k=l.#k,A=l.#l[0],B=l.#l[1],C=l.#l[2],D=j*J(U((this.#l[0]*A+this.#l[1]*B+this.#l[2]*C)/(j*k)));return this.#l[0]=A/k*D,this.#l[1]=B/k*D,this.#l[2]=C/k*D,this.#j(),this}random(){let l,j;do l=L()*2-1,j=L()*2-1;while(l**2+j**2>=1);const k=E(1-l**2-j**2),A=this.#k;return this.#l[0]=A*2*l*k,this.#l[1]=A*2*j*k,this.#l[2]=A*(1-2*(l**2+j**2)),this.#j(),this}rotateX(l){const j=J(l),k=O(l),A=this.#l[1],B=this.#l[2];return this.#l[1]=A*j-B*k,this.#l[2]=A*k+B*j,this.#j(),this}rotateY(l){const j=J(l),k=O(l),A=this.#l[0],B=this.#l[2];return this.#l[0]=A*j+B*k,this.#l[2]=A*k+B*j,this.#j(),this}rotateZ(l){const j=J(l),k=O(l),A=this.#l[0],B=this.#l[1];return this.#l[0]=A*j-B*k,this.#l[1]=A*k+B*j,this.#j(),this}satisfyEquality(l){return this.#l[0]===l.#l[0]&&this.#l[1]===l.#l[1]&&this.#l[2]===l.#l[2]}satisfyOpposition(l){return this.#l[0]===-l.#l[0]&&this.#l[1]===-l.#l[1]&&this.#l[2]===-l.#l[2]}scale(l){return this.#l[0]*=l,this.#l[1]*=l,this.#l[2]*=l,this.#j(),this}subtract(l){return this.#l[0]-=l.#l[0],this.#l[1]-=l.#l[1],this.#l[2]-=l.#l[2],this.#j(),this}zero(){return this.#l[0]=0,this.#l[1]=0,this.#l[2]=0,this.#j(),this}*[Symbol.iterator](){yield this.#l[0],yield this.#l[1],yield this.#l[2]}}class R{#k=0;#A=new Float64Array([0,0,0,0]);#l=new Float64Array(4);#j(l=this.#l[0],j=this.#l[1],k=this.#l[2],A=this.#l[3]){if(l!==this.#A[0]||j!==this.#A[1]||k!==this.#A[2]||A!==this.#A[3])this.#k=E(l**2+j**2+k**2+A**2),this.#A[0]=l,this.#A[1]=j,this.#A[2]=k,this.#A[3]=A}constructor(l=0,j=0,k=0,A=0){this.#l[0]=l,this.#l[1]=j,this.#l[2]=k,this.#l[3]=A,this.#j(l,j,k,A)}static add(l,j){return new R(l.#l[0]+j.#l[0],l.#l[1]+j.#l[1],l.#l[2]+j.#l[2],l.#l[3]+j.#l[3])}static angleBetween(l,j){return U((l.#l[0]*j.#l[0]+l.#l[1]*j.#l[1]+l.#l[2]*j.#l[2]+l.#l[3]*j.#l[3])/(l.#k*j.#k))}static distance(l,j){return E((l.#l[0]-j.#l[0])**2+(l.#l[1]-j.#l[1])**2+(l.#l[2]-j.#l[2])**2+(l.#l[3]-j.#l[3])**2)}static distanceChebyshev(l,j){const k=F(l.#l[0]-j.#l[0]),A=F(l.#l[1]-j.#l[1]),B=F(l.#l[2]-j.#l[2]),C=F(l.#l[3]-j.#l[3]);return k>=A&&k>=B&&k>=C?k:A>=B&&A>=C?A:B>=C?B:C}static distanceManhattan(l,j){return F(l.#l[0]-j.#l[0])+F(l.#l[1]-j.#l[1])+F(l.#l[2]-j.#l[2])+F(l.#l[3]-j.#l[3])}static distanceMinkowski(l,j,k){return(F(l.#l[0]-j.#l[0])**k+F(l.#l[1]-j.#l[1])**k+F(l.#l[2]-j.#l[2])**k+F(l.#l[3]-j.#l[3])**k)**(1/k)}static distanceSq(l,j){return(l.#l[0]-j.#l[0])**2+(l.#l[1]-j.#l[1])**2+(l.#l[2]-j.#l[2])**2+(l.#l[3]-j.#l[3])**2}static dot(l,j){return l.#l[0]*j.#l[0]+l.#l[1]*j.#l[1]+l.#l[2]*j.#l[2]+l.#l[3]*j.#l[3]}static immutable(l=0,j=0,k=0,A=0){const B=new Float64Array(10);B[0]=l,B[1]=j,B[2]=k,B[3]=A;const C=l**2+j**2+k**2;B[4]=H(E(j**2+k**2+A**2),l),B[5]=H(E(k**2+A**2+l**2),j),B[6]=H(E(A**2+l**2+j**2),k),B[7]=H(E(C),A);const D=C+A**2;B[8]=E(D),B[9]=D;const G=l===Infinity||l===(-Infinity)||j===Infinity||j===(-Infinity)||k===Infinity||k===(-Infinity)||A===Infinity||A===(-Infinity),T=isNaN(l)&&isNaN(j)&&isNaN(k)&&isNaN(A),_=l===0&&j===0&&k===0&&A===0,N=Object.freeze([...B.slice(0,4)]);return{get a(){return B[3]},get angleW(){return B[7]},get angleX(){return B[4]},get angleY(){return B[5]},get angleZ(){return B[6]},get b(){return B[2]},get g(){return B[1]},get isInfinite(){return G},get isNaN(){return T},get isZero(){return _},get magnitude(){return B[8]},get magnitudeSq(){return B[10]},get r(){return B[0]},get rgba(){return N},get w(){return B[3]},get x(){return B[0]},get xyzw(){return N},get y(){return B[1]},get z(){return B[2]}}}static isInfinite(l){const j=l.#l[0],k=l.#l[1],A=l.#l[2],B=l.#l[3];return j===Infinity||j===(-Infinity)||k===Infinity||k===(-Infinity)||A===Infinity||A===(-Infinity)||B===Infinity||B===(-Infinity)}static isNaN(l){return isNaN(l.#l[0])||isNaN(l.#l[1])||isNaN(l.#l[2])||isNaN(l.#l[3])}static isZero(l){return l.#l[0]===0&&l.#l[1]===0&&l.#l[2]===0&&l.#l[3]===0}static lerp(l,j,k){if(k>1)k=1;else if(k<0)k=0;const A=l.#l[0],B=l.#l[1],C=l.#l[2],D=l.#l[3];return new R(A+(j.#l[0]-A)*k,B+(j.#l[1]-B)*k,C+(j.#l[2]-C)*k,D+(j.#l[3]-D)*k)}static negate(l){return new R(-l.#l[0],-l.#l[1],-l.#l[2],-l.#l[3])}static normalize(l){const j=l.#k;return new R(l.#l[0]/j,l.#l[1]/j,l.#l[2]/j,l.#l[3]/j)}static project(l,j){const k=l.#k,A=j.#k,B=j.#l[0],C=j.#l[1],D=j.#l[2],G=j.#l[3],T=k*J(U((l.#l[0]*B+l.#l[1]*C+l.#l[2]*D+l.#l[3]*G)/(k*A)));return new R(B/A*T,C/A*T,D/A*T,G/A*T)}static random(){let l,j,k,A;do l=L()*2-1,j=L()*2-1,k=L()*2-1,A=L()*2-1;while(l**2+j**2>=1||k**2+A**2>=1);const B=E((1-l**2-j**2)/(k**2+A**2));return new R(l,j,k*B,A*B)}static satisfyEquality(l,j){return l.#l[0]===j.#l[0]&&l.#l[1]===j.#l[1]&&l.#l[2]===j.#l[2]&&l.#l[3]===j.#l[3]}static satisfyOpposition(l,j){return l.#l[0]===-j.#l[0]&&l.#l[1]===-j.#l[1]&&l.#l[2]===-j.#l[2]&&l.#l[3]===-j.#l[3]}static scale(l,j){return new R(l.#l[0]*j,l.#l[1]*j,l.#l[2]*j,l.#l[3]*j)}static subtract(l,j){return new R(l.#l[0]-j.#l[0],l.#l[1]-j.#l[1],l.#l[2]-j.#l[2],l.#l[3]-j.#l[3])}static zero(){return new R}get a(){return this.#l[3]}get angleW(){return H(E(this.#l[0]**2+this.#l[1]**2+this.#l[2]**2),this.#l[3])}get angleX(){return H(E(this.#l[1]**2+this.#l[2]**2+this.#l[3]**2),this.#l[0])}get angleY(){return H(E(this.#l[2]**2+this.#l[3]**2+this.#l[0]**2),this.#l[1])}get angleZ(){return H(E(this.#l[3]**2+this.#l[0]**2+this.#l[1]**2),this.#l[2])}get b(){return this.#l[2]}get g(){return this.#l[1]}get magnitude(){return this.#k}get magnitudeSq(){return this.#k**2}get r(){return this.#l[0]}get rgba(){return this.#l.slice()}get w(){return this.#l[3]}get x(){return this.#l[0]}get xyzw(){return this.#l.slice()}get y(){return this.#l[1]}get z(){return this.#l[2]}set a(l){this.#l[3]=l,this.#j()}set b(l){this.#l[2]=l,this.#j()}set g(l){this.#l[1]=l,this.#j()}set magnitude(l){const j=this.#k;this.#l[0]=this.#l[0]/j*l,this.#l[1]=this.#l[1]/j*l,this.#l[2]=this.#l[2]/j*l,this.#l[3]=this.#l[3]/j*l,this.#j()}set r(l){this.#l[0]=l,this.#j()}set rgba(l){this.#l[0]=l[0],this.#l[1]=l[1],this.#l[2]=l[2],this.#l[3]=l[3],this.#j()}set w(l){this.#l[3]=l,this.#j()}set x(l){this.#l[0]=l,this.#j()}set xyzw(l){this.#l[0]=l[0],this.#l[1]=l[1],this.#l[2]=l[2],this.#l[3]=l[3],this.#j()}set y(l){this.#l[1]=l,this.#j()}set z(l){this.#l[2]=l,this.#j()}add(l){return this.#l[0]+=l.#l[0],this.#l[1]+=l.#l[1],this.#l[2]+=l.#l[2],this.#l[3]+=l.#l[3],this.#j(),this}angleBetween(l){return U((this.#l[0]*l.#l[0]+this.#l[1]*l.#l[1]+this.#l[2]*l.#l[2]+this.#l[3]*l.#l[3])/(this.#k*l.#k))}clamp(l,j){const k=this.#k;if(k>j)this.#l[0]=this.#l[0]/k*j,this.#l[1]=this.#l[1]/k*j,this.#l[2]=this.#l[2]/k*j,this.#l[3]=this.#l[3]/k*j,this.#j();else if(k<l)this.#l[0]=this.#l[0]/k*l,this.#l[1]=this.#l[1]/k*l,this.#l[2]=this.#l[2]/k*l,this.#l[3]=this.#l[3]/k*l,this.#j();return this}clone(){return new R(this.#l[0],this.#l[1],this.#l[2],this.#l[3])}copy(l){return this.#l[0]=l.#l[0],this.#l[1]=l.#l[1],this.#l[2]=l.#l[2],this.#l[3]=l.#l[3],this.#j(),this}distance(l){return E((this.#l[0]-l.#l[0])**2+(this.#l[1]-l.#l[1])**2+(this.#l[2]-l.#l[2])**2+(this.#l[3]-l.#l[3])**2)}distanceSq(l){return(this.#l[0]-l.#l[0])**2+(this.#l[1]-l.#l[1])**2+(this.#l[2]-l.#l[2])**2+(this.#l[3]-l.#l[3])**2}dot(l){return this.#l[0]*l.#l[0]+this.#l[1]*l.#l[1]+this.#l[2]*l.#l[2]+this.#l[3]*l.#l[3]}isInfinite(){const l=this.#l[0],j=this.#l[1],k=this.#l[2],A=this.#l[3];return l===Infinity||l===(-Infinity)||j===Infinity||j===(-Infinity)||k===Infinity||k===(-Infinity)||A===Infinity||A===(-Infinity)}isNaN(){return isNaN(this.#l[0])||isNaN(this.#l[1])||isNaN(this.#l[2])||isNaN(this.#l[3])}isZero(){return this.#l[0]===0&&this.#l[1]===0&&this.#l[2]===0&&this.#l[3]===0}limitMax(l){const j=this.#k;if(j>l)this.#l[0]=this.#l[0]/j*l,this.#l[1]=this.#l[1]/j*l,this.#l[2]=this.#l[2]/j*l,this.#l[3]=this.#l[3]/j*l,this.#j();return this}limitMin(l){const j=this.#k;if(j<l)this.#l[0]=this.#l[0]/j*l,this.#l[1]=this.#l[1]/j*l,this.#l[2]=this.#l[2]/j*l,this.#l[3]=this.#l[3]/j*l,this.#j();return this}lookAt(l){const j=this.#k,k=l.#k;return this.#l[0]=l.#l[0]/k*j,this.#l[1]=l.#l[1]/k*j,this.#l[2]=l.#l[2]/k*j,this.#l[3]=l.#l[3]/k*j,this.#j(),this}negate(){return this.#l[0]*=-1,this.#l[1]*=-1,this.#l[2]*=-1,this.#l[3]*=-1,this.#j(),this}normalize(){const l=this.#k;return this.#l[0]/=l,this.#l[1]/=l,this.#l[2]/=l,this.#l[3]/=l,this.#j(),this}project(l){const j=this.#k,k=l.#k,A=l.#l[0],B=l.#l[1],C=l.#l[2],D=l.#l[3],G=j*J(U((this.#l[0]*A+this.#l[1]*B+this.#l[2]*C+this.#l[3]*D)/(j*k)));return this.#l[0]=A/k*G,this.#l[1]=B/k*G,this.#l[2]=C/k*G,this.#l[3]=D/k*G,this.#j(),this}random(){let l,j,k,A;do l=L()*2-1,j=L()*2-1,k=L()*2-1,A=L()*2-1;while(l**2+j**2>=1||k**2+A**2>=1);const B=E((1-l**2-j**2)/(k**2+A**2)),C=this.#k;return this.#l[0]=C*l,this.#l[1]=C*j,this.#l[2]=C*k*B,this.#l[3]=C*A*B,this.#j(),this}satisfyEquality(l){return this.#l[0]===l.#l[0]&&this.#l[1]===l.#l[1]&&this.#l[2]===l.#l[2]&&this.#l[3]===l.#l[3]}satisfyOpposition(l){return this.#l[0]===-l.#l[0]&&this.#l[1]===-l.#l[1]&&this.#l[2]===-l.#l[2]&&this.#l[3]===-l.#l[3]}scale(l){return this.#l[0]*=l,this.#l[1]*=l,this.#l[2]*=l,this.#l[3]*=l,this.#j(),this}subtract(l){return this.#l[0]-=l.#l[0],this.#l[1]-=l.#l[1],this.#l[2]-=l.#l[2],this.#l[3]-=l.#l[3],this.#j(),this}zero(){return this.#l[0]=0,this.#l[1]=0,this.#l[2]=0,this.#l[3]=0,this.#j(),this}*[Symbol.iterator](){yield this.#l[0],yield this.#l[1],yield this.#l[2],yield this.#l[3]}}export{R as Vec4,K as Vec3,Q as Vec2};
