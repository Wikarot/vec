var{PI:S,sin:J,cos:E,acos:Q,atan2:K,sqrt:D,random:G,abs:C}=Math;class L{constructor(u=0,l=0){this.x=u,this.y=l}static add(u,l){return new L(u.x+l.x,u.y+l.y)}static angleBetween(u,l){return K(u.x*l.y-u.y*l.x,u.x*l.x+u.y*l.y)}static distance(u,l){return D((u.x-l.x)**2+(u.y-l.y)**2)}static distanceChebyshev(u,l){const N=C(u.x-l.x),j=C(u.y-l.y);return N>=j?N:j}static distanceManhattan(u,l){return C(u.x-l.x)+C(u.y-l.y)}static distanceMinkowski(u,l,N){return(C(u.x-l.x)**N+C(u.y-l.y)**N)**(1/N)}static distanceSq(u,l){return(u.x-l.x)**2+(u.y-l.y)**2}static dot(u,l){return u.x*l.x+u.y*l.y}static fromPolarCoords(u,l){return new L(u*E(l),u*J(l))}static isInfinite(u){const{x:l,y:N}=u;return l===Infinity||l===(-Infinity)||N===Infinity||N===(-Infinity)}static isNaN(u){return isNaN(u.x)||isNaN(u.y)}static isZero(u){return u.x===0&&u.y===0}static lerp(u,l,N){if(N>1)N=1;else if(N<0)N=0;const{x:j,y:k}=u;return new L(j+(l.x-j)*N,k+(l.y-k)*N)}static negate(u){return new L(-u.x,-u.y)}static normalize(u){const l=u.magnitude;return new L(u.x/l,u.y/l)}static project(u,l){const N=l.magnitude,{x:j,y:k}=u,{x:A,y:B}=l,F=u.magnitude*E(K(j*B-k*A,j*A+k*B));return new L(A/N*F,B/N*F)}static random(){const u=G()*S*2;return new L(E(u),J(u))}static satisfyEquality(u,l){return u.x===l.x&&u.y===l.y}static satisfyOpposition(u,l){return u.x===-l.x&&u.y===-l.y}static scale(u,l){return new L(u.x*l,u.y*l)}static subtract(u,l){return new L(u.x-l.x,u.y-l.y)}get angleX(){return K(this.y,this.x)+(this.y<0?2*S:0)}get angleY(){return-K(this.x,this.y)+(this.x>0?2*S:0)}get magnitude(){return D(this.x**2+this.y**2)}get magnitudeSq(){return this.x**2+this.y**2}get xy(){return[this.x,this.y]}set angleX(u){const l=this.magnitude;this.x=l*E(u),this.y=l*J(u)}set angleY(u){const l=this.magnitude;this.x=l*-J(u),this.y=l*E(u)}set magnitude(u){const l=this.magnitude;this.x=this.x/l*u,this.y=this.y/l*u}set xy(u){this.x=u[0],this.y=u[1]}add(u){return this.x+=u.x,this.y+=u.y,this}angleBetween(u){const{x:l,y:N}=this,{x:j,y:k}=u;return K(l*k-N*j,l*j+N*k)}clamp(u,l){const N=this.magnitude;if(N>l)this.x=this.x/N*l,this.y=this.y/N*l;else if(N<u)this.x=this.x/N*u,this.y=this.y/N*u;return this}clone(){return new L(this.x,this.y)}copy(u){return this.x=u.x,this.y=u.y,this}distance(u){return D((this.x-u.x)**2+(this.y-u.y)**2)}distanceSq(u){return(this.x-u.x)**2+(this.y-u.y)**2}dot(u){return this.x*u.x+this.y*u.y}isInfinite(){const{x:u,y:l}=this;return u===Infinity||u===(-Infinity)||l===Infinity||l===(-Infinity)}isNaN(){return isNaN(this.x)||isNaN(this.y)}isZero(){return this.x===0&&this.y===0}limitMax(u){const l=this.magnitude;if(l>u)this.x=this.x/l*u,this.y=this.y/l*u;return this}limitMin(u){const l=this.magnitude;if(l<u)this.x=this.x/l*u,this.y=this.y/l*u;return this}lookAt(u){const l=this.magnitude,N=u.magnitude;return this.x=u.x/N*l,this.y=u.y/N*l,this}negate(){return this.x*=-1,this.y*=-1,this}normalize(){const u=this.magnitude;return this.x/=u,this.y/=u,this}project(u){const l=u.magnitude,{x:N,y:j}=this,{x:k,y:A}=u,B=this.magnitude*E(K(N*A-j*k,N*k+j*A));return this.x=k/l*B,this.y=A/l*B,this}random(){const u=G()*S*2,l=this.magnitude;return this.x=l*E(u),this.y=l*J(u),this}rotateZ(u){const l=E(u),N=J(u),{x:j,y:k}=this;return this.x=j*l-k*N,this.y=j*N+k*l,this}satisfyEquality(u){return this.x===u.x&&this.y===u.y}satisfyOpposition(u){return this.x===-u.x&&this.y===-u.y}scale(u){return this.x*=u,this.y*=u,this}subtract(u){return this.x-=u.x,this.y-=u.y,this}turnLeft(){const u=this.x;return this.x=-this.y,this.y=u,this}turnRight(){const u=this.x;return this.x=this.y,this.y=-u,this}zero(){return this.x=0,this.y=0,this}*[Symbol.iterator](){yield this.x,yield this.y}}class H{constructor(u=0,l=0,N=0){this.x=u,this.y=l,this.z=N}static add(u,l){return new H(u.x+l.x,u.y+l.y,u.z+l.z)}static angleBetween(u,l){return Q((u.x*l.x+u.y*l.y+u.z*l.z)/(u.magnitude*l.magnitude))}static cross(u,l){const{x:N,y:j,z:k}=u,{x:A,y:B,z:F}=l;return new H(j*F-k*B,k*A-N*F,N*B-j*A)}static distance(u,l){return D((u.x-l.x)**2+(u.y-l.y)**2+(u.z-l.z)**2)}static distanceChebyshev(u,l){const N=C(u.x-l.x),j=C(u.y-l.y),k=C(u.z-l.z);return N>=j&&N>=k?N:j>=k?j:k}static distanceManhattan(u,l){return C(u.x-l.x)+C(u.y-l.y)+C(u.z-l.z)}static distanceMinkowski(u,l,N){return(C(u.x-l.x)**N+C(u.y-l.y)**N+C(u.z-l.z)**N)**(1/N)}static distanceSq(u,l){return(u.x-l.x)**2+(u.y-l.y)**2+(u.z-l.z)**2}static dot(u,l){return u.x*l.x+u.y*l.y+u.z*l.z}static fromCylindricalCoords(u,l,N){return new H(u*E(l),u*J(l),N)}static fromSphericalCoords(u,l,N){return new H(u*J(l)*E(N),u*J(l)*J(N),u*E(l))}static isInfinite(u){const{x:l,y:N,z:j}=u;return l===Infinity||l===(-Infinity)||N===Infinity||N===(-Infinity)||j===Infinity||j===(-Infinity)}static isNaN(u){return isNaN(u.x)||isNaN(u.y)||isNaN(u.z)}static isZero(u){return u.x===0&&u.y===0&&u.z===0}static lerp(u,l,N){if(N>1)N=1;else if(N<0)N=0;return new H(u.x+(l.x-u.x)*N,u.y+(l.y-u.y)*N,u.z+(l.z-u.z)*N)}static negate(u){return new H(-u.x,-u.y,-u.z)}static normalize(u){const l=u.magnitude;return new H(u.x/l,u.y/l,u.z/l)}static project(u,l){const N=u.magnitude,j=l.magnitude,{x:k,y:A,z:B}=l,F=N*E(Q((u.x*k+u.y*A+u.z*B)/(N*j)));return new H(k/j*F,A/j*F,B/j*F)}static random(){let u,l;do u=G()*2-1,l=G()*2-1;while(u**2+l**2>=1);const N=D(1-u**2-l**2);return new H(2*u*N,2*l*N,1-2*(u**2+l**2))}static satisfyEquality(u,l){return u.x===l.x&&u.y===l.y&&u.z===l.z}static satisfyOpposition(u,l){return u.x===-l.x&&u.y===-l.y&&u.z===-l.z}static scale(u,l){return new H(u.x*l,u.y*l,u.z*l)}static subtract(u,l){return new H(u.x-l.x,u.y-l.y,u.z-l.z)}get angleX(){return K(D(this.y**2+this.z**2),this.x)}get angleY(){return K(D(this.z**2+this.x**2),this.y)}get angleZ(){return K(D(this.x**2+this.y**2),this.z)}get b(){return this.z}get g(){return this.y}get magnitude(){return D(this.x**2+this.y**2+this.z**2)}get magnitudeSq(){return this.x**2+this.y**2+this.z**2}get r(){return this.x}get rgb(){return[this.x,this.y,this.z]}get xyz(){return[this.x,this.y,this.z]}set b(u){this.z=u}set g(u){this.y=u}set magnitude(u){const l=this.magnitude;this.x=this.x/l*u,this.y=this.y/l*u,this.z=this.z/l*u}set r(u){this.x=u}set rgb(u){this.x=u[0],this.y=u[1],this.z=u[2]}set xyz(u){this.x=u[0],this.y=u[1],this.z=u[2]}add(u){return this.x+=u.x,this.y+=u.y,this.z+=u.z,this}angleBetween(u){return Q((this.x*u.x+this.y*u.y+this.z*u.z)/(this.magnitude*u.magnitude))}clamp(u,l){const N=this.magnitude;if(N>l)this.x=this.x/N*l,this.y=this.y/N*l,this.z=this.z/N*l;else if(N<u)this.x=this.x/N*u,this.y=this.y/N*u,this.z=this.z/N*u;return this}clone(){return new H(this.x,this.y,this.z)}copy(u){return this.x=u.x,this.y=u.y,this.z=u.z,this}cross(u){const{x:l,y:N,z:j}=this,{x:k,y:A,z:B}=u;return this.x=N*B-j*A,this.y=j*k-l*B,this.z=l*A-N*k,this}distance(u){return D((this.x-u.x)**2+(this.y-u.y)**2+(this.z-u.z)**2)}distanceSq(u){return(this.x-u.x)**2+(this.y-u.y)**2+(this.z-u.z)**2}dot(u){return this.x*u.x+this.y*u.y+this.z*u.z}isInfinite(){const{x:u,y:l,z:N}=this;return u===Infinity||u===(-Infinity)||l===Infinity||l===(-Infinity)||N===Infinity||N===(-Infinity)}isNaN(){return isNaN(this.x)||isNaN(this.y)||isNaN(this.z)}isZero(){return this.x===0&&this.y===0&&this.z===0}limitMax(u){const l=this.magnitude;if(l>u)this.x=this.x/l*u,this.y=this.y/l*u,this.z=this.z/l*u;return this}limitMin(u){const l=this.magnitude;if(l<u)this.x=this.x/l*u,this.y=this.y/l*u,this.z=this.z/l*u;return this}lookAt(u){const l=this.magnitude,N=u.magnitude;return this.x=u.x/N*l,this.y=u.y/N*l,this.z=u.z/N*l,this}negate(){return this.x*=-1,this.y*=-1,this.z*=-1,this}normalize(){const u=this.magnitude;return this.x/=u,this.y/=u,this.z/=u,this}project(u){const l=this.magnitude,N=u.magnitude,{x:j,y:k,z:A}=u,B=l*E(Q((this.x*j+this.y*k+this.z*A)/(l*N)));return this.x=j/N*B,this.y=k/N*B,this.z=A/N*B,this}random(){let u,l;do u=G()*2-1,l=G()*2-1;while(u**2+l**2>=1);const N=D(1-u**2-l**2),j=this.magnitude;return this.x=j*2*u*N,this.y=j*2*l*N,this.z=j*(1-2*(u**2+l**2)),this}rotateX(u){const l=E(u),N=J(u),{y:j,z:k}=this;return this.y=j*l-k*N,this.z=j*N+k*l,this}rotateY(u){const l=E(u),N=J(u),{x:j,z:k}=this;return this.x=j*l+k*N,this.z=j*N+k*l,this}rotateZ(u){const l=E(u),N=J(u),{x:j,y:k}=this;return this.x=j*l-k*N,this.y=j*N+k*l,this}satisfyEquality(u){return this.x===u.x&&this.y===u.y&&this.z===u.z}satisfyOpposition(u){return this.x===-u.x&&this.y===-u.y&&this.z===-u.z}scale(u){return this.x*=u,this.y*=u,this.z*=u,this}subtract(u){return this.x-=u.x,this.y-=u.y,this.z-=u.z,this}zero(){return this.x=0,this.y=0,this.z=0,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}class O{constructor(u=0,l=0,N=0,j=0){this.x=u,this.y=l,this.z=N,this.w=j}static add(u,l){return new O(u.x+l.x,u.y+l.y,u.z+l.z,u.w+l.w)}static angleBetween(u,l){return Q((u.x*l.x+u.y*l.y+u.z*l.z+u.w*l.w)/(u.magnitude*l.magnitude))}static distance(u,l){return D((u.x-l.x)**2+(u.y-l.y)**2+(u.z-l.z)**2+(u.w-l.w)**2)}static distanceChebyshev(u,l){const N=C(u.x-l.x),j=C(u.y-l.y),k=C(u.z-l.z),A=C(u.w-l.w);return N>=j&&N>=k&&N>=A?N:j>=k&&j>=A?j:k>=A?k:A}static distanceManhattan(u,l){return C(u.x-l.x)+C(u.y-l.y)+C(u.z-l.z)+C(u.w-l.w)}static distanceMinkowski(u,l,N){return(C(u.x-l.x)**N+C(u.y-l.y)**N+C(u.z-l.z)**N+C(u.w-l.w)**N)**(1/N)}static distanceSq(u,l){return(u.x-l.x)**2+(u.y-l.y)**2+(u.z-l.z)**2+(u.w-l.w)**2}static dot(u,l){return u.x*l.x+u.y*l.y+u.z*l.z+u.w*l.w}static isInfinite(u){const{x:l,y:N,z:j,w:k}=u;return l===Infinity||l===(-Infinity)||N===Infinity||N===(-Infinity)||j===Infinity||j===(-Infinity)||k===Infinity||k===(-Infinity)}static isNaN(u){return isNaN(u.x)||isNaN(u.y)||isNaN(u.z)||isNaN(u.w)}static isZero(u){return u.x===0&&u.y===0&&u.z===0&&u.w===0}static lerp(u,l,N){if(N>1)N=1;else if(N<0)N=0;const{x:j,y:k,z:A,w:B}=u;return new O(j+(l.x-j)*N,k+(l.y-k)*N,A+(l.z-A)*N,B+(l.w-B)*N)}static negate(u){return new O(-u.x,-u.y,-u.z,-u.w)}static normalize(u){const l=u.magnitude;return new O(u.x/l,u.y/l,u.z/l,u.w/l)}static project(u,l){const N=u.magnitude,j=l.magnitude,{x:k,y:A,z:B,w:F}=l,R=N*E(Q((u.x*k+u.y*A+u.z*B+u.w*F)/(N*j)));return new O(k/j*R,A/j*R,B/j*R,F/j*R)}static random(){let u,l,N,j;do u=G()*2-1,l=G()*2-1,N=G()*2-1,j=G()*2-1;while(u**2+l**2>=1||N**2+j**2>=1);const k=D((1-u**2-l**2)/(N**2+j**2));return new O(u,l,N*k,j*k)}static satisfyEquality(u,l){return u.x===l.x&&u.y===l.y&&u.z===l.z&&u.w===l.w}static satisfyOpposition(u,l){return u.x===-l.x&&u.y===-l.y&&u.z===-l.z&&u.w===-l.w}static scale(u,l){return new O(u.x*l,u.y*l,u.z*l,u.w*l)}static subtract(u,l){return new O(u.x-l.x,u.y-l.y,u.z-l.z,u.w-l.w)}get a(){return this.w}get angleW(){return K(D(this.x**2+this.y**2+this.z**2),this.w)}get angleX(){return K(D(this.y**2+this.z**2+this.w**2),this.x)}get angleY(){return K(D(this.z**2+this.w**2+this.x**2),this.y)}get angleZ(){return K(D(this.w**2+this.x**2+this.y**2),this.z)}get b(){return this.z}get g(){return this.y}get magnitude(){return D(this.x**2+this.y**2+this.z**2+this.w**2)}get magnitudeSq(){return this.x**2+this.y**2+this.z**2+this.w**2}get r(){return this.x}get rgba(){return[this.x,this.y,this.z,this.w]}get xyzw(){return[this.x,this.y,this.z,this.w]}set a(u){this.w=u}set b(u){this.z=u}set g(u){this.y=u}set magnitude(u){const l=this.magnitude;this.x=this.x/l*u,this.y=this.y/l*u,this.z=this.z/l*u,this.w=this.w/l*u}set r(u){this.x=u}set rgba(u){this.x=u[0],this.y=u[1],this.z=u[2],this.w=u[3]}set xyzw(u){this.x=u[0],this.y=u[1],this.z=u[2],this.w=u[3]}add(u){return this.x+=u.x,this.y+=u.y,this.z+=u.z,this.w+=u.w,this}angleBetween(u){return Q((this.x*u.x+this.y*u.y+this.z*u.z+this.w*u.w)/(this.magnitude*u.magnitude))}clamp(u,l){const N=this.magnitude;if(N>l)this.x=this.x/N*l,this.y=this.y/N*l,this.z=this.z/N*l,this.w=this.w/N*l;else if(N<u)this.x=this.x/N*u,this.y=this.y/N*u,this.z=this.z/N*u,this.w=this.w/N*u;return this}clone(){return new O(this.x,this.y,this.z,this.w)}copy(u){return this.x=u.x,this.y=u.y,this.z=u.z,this.w=u.w,this}distance(u){return D((this.x-u.x)**2+(this.y-u.y)**2+(this.z-u.z)**2+(this.w-u.w)**2)}distanceSq(u){return(this.x-u.x)**2+(this.y-u.y)**2+(this.z-u.z)**2+(this.w-u.w)**2}dot(u){return this.x*u.x+this.y*u.y+this.z*u.z+this.w*u.w}isInfinite(){const{x:u,y:l,z:N,w:j}=this;return u===Infinity||u===(-Infinity)||l===Infinity||l===(-Infinity)||N===Infinity||N===(-Infinity)||j===Infinity||j===(-Infinity)}isNaN(){return isNaN(this.x)||isNaN(this.y)||isNaN(this.z)||isNaN(this.w)}isZero(){return this.x===0&&this.y===0&&this.z===0&&this.w===0}limitMax(u){const l=this.magnitude;if(l>u)this.x=this.x/l*u,this.y=this.y/l*u,this.z=this.z/l*u,this.w=this.w/l*u;return this}limitMin(u){const l=this.magnitude;if(l<u)this.x=this.x/l*u,this.y=this.y/l*u,this.z=this.z/l*u,this.w=this.w/l*u;return this}lookAt(u){const l=this.magnitude,N=u.magnitude;return this.x=u.x/N*l,this.y=u.y/N*l,this.z=u.z/N*l,this.w=u.w/N*l,this}negate(){return this.x*=-1,this.y*=-1,this.z*=-1,this.w*=-1,this}normalize(){const u=this.magnitude;return this.x/=u,this.y/=u,this.z/=u,this.w/=u,this}project(u){const l=this.magnitude,N=u.magnitude,{x:j,y:k,z:A,w:B}=u,F=l*E(Q((this.x*j+this.y*k+this.z*A+this.w*B)/(l*N)));return this.x=j/N*F,this.y=k/N*F,this.z=A/N*F,this.w=B/N*F,this}random(){let u,l,N,j;do u=G()*2-1,l=G()*2-1,N=G()*2-1,j=G()*2-1;while(u**2+l**2>=1||N**2+j**2>=1);const k=D((1-u**2-l**2)/(N**2+j**2)),A=this.magnitude;return this.x=A*u,this.y=A*l,this.z=A*N*k,this.w=A*j*k,this}satisfyEquality(u){return this.x===u.x&&this.y===u.y&&this.z===u.z&&this.w===u.w}satisfyOpposition(u){return this.x===-u.x&&this.y===-u.y&&this.z===-u.z&&this.w===-u.w}scale(u){return this.x*=u,this.y*=u,this.z*=u,this.w*=u,this}subtract(u){return this.x-=u.x,this.y-=u.y,this.z-=u.z,this.w-=u.w,this}zero(){return this.x=0,this.y=0,this.z=0,this.w=0,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}export{O as Vec4,H as Vec3,L as Vec2};
